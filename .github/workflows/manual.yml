name: Build and Test

on:
  push:
  pull_request:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu", "macos", "windows"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
        with:
          crystal: latest

      - name: Install dependencies
        run: shards install --without-development --release

      - name: Run tests
        run: crystal spec

      - name: Build executable
        run: |
          shards build --release
          # Si votre fichier principal n'est pas dans src ou a un nom différent, spécifiez-le :
          # crystal build path/to/your/crystaldump.cr --release

      - name: Run executable (help)
        run: |
          ./bin/crystaldump --help
          # Sur Windows, utilisez :
          # .\bin\crystaldump.exe --help

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: crystaldump-${{ matrix.os }}
          path: |
            bin/crystaldump
            # Sur Windows, ajoutez :
            # bin/crystaldump.exe

      - name: Cross-Compile for Windows (Generate Object Files)
        run: |
          mkdir -p build
          crystal build crystaldump.cr --cross-compile --target x86_64-pc-win32 > build/compile_output.txt
        shell: bash

      - name: Extract Compilation Command
        run: |
          COMPILE_CMD=$(tail -n 1 build/compile_output.txt)
          echo "COMPILE_CMD=$COMPILE_CMD" >> $GITHUB_ENV
        shell: bash

      - name: Link Windows Executable
        run: |
          $COMPILE_CMD -o build/crystaldump.exe
        shell: bash

      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: crystaldump-windows
          path: build/crystaldump.exe